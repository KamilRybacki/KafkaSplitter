version: '2.1'

services:
  tests-zoo:
    image: confluentinc/cp-zookeeper
    hostname: tests-zoo
    ports:
      - "2181:2181"
    networks:
      kemux:
        ipv4_address: ${ZOOKEEPER_IP}
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_SYNC_LIMIT: 2
  tests-kafka:
    image: confluentinc/cp-kafka
    hostname: tests-kafka
    networks:
      kemux:
        ipv4_address: ${KAFKA_IP}
    container_name: tests-kafka
    ports:
      - "${KAFKA_PORT}:9092"
      - "9101:9101"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'tests-zoo:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://tests-kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
    depends_on:
      - tests-zoo

  tests-producer:
    container_name: tests-producer
    networks:
      kemux:
        ipv4_address: ${PRODUCER_IP}
    environment:
      - KAFKA_ADDRESS=${KAFKA_IP}:${KAFKA_PORT}
    image: ${PRODUCER_IMAGE}
    depends_on:
      - tests-kafka
      - tests-zoo

  tests-splitter:
    container_name: tests-splitter
    networks:
      kemux:
        ipv4_address: ${SPLITTER_IP}
    environment:
      - KAFKA_ADDRESS=${KAFKA_IP}:${KAFKA_PORT}
    image: ${SPLITTER_IMAGE}
    depends_on:
      - tests-producer

networks:
  kemux:
    driver: bridge
    ipam:
      config:
        - subnet: ${IP_SUBNET}.0/16
          gateway: 10.5.0.1
